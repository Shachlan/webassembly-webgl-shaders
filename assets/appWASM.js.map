{"version":3,"sources":["./dev/cpp/openGLShading.cpp","./dev/cpp/emscripten.cpp"],"names":[],"mappingsopCA;AAEA;AAAA;ADPA;AACA;AACA;ACOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADHA;AAAA;AAaA;ACMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADnBA;AAQA;ACEA;;;;;;;;;;;;;;;AAhCA;AAEA;AAMA","file":"./assets/appWASM.js","sourcesContent":["#include \"openGLShading.h\"\n\n#include <string>\n\nstruct TextureInfo\n{\n    uint8_t *buffer;\n    int width;\n    int height;\n};\n\nint target_width;\nint target_height;\nfloat target_blend_ratio;\n\nTextureInfo textures[2];\nint latest_created_texture = -1;\n\nuint32_t createTexture(void)\n{\n    return ++latest_created_texture;\n}\n\nbool next_invert;\n\nvoid setupOpenGL(int width, int height, float blend_ratio, char *canvasName)\n{\n    target_width = width;\n    target_height = height;\n    target_blend_ratio = blend_ratio;\n}\n\nvoid loadTexture(uint32_t textureID, int width, int height, uint8_t *buffer)\n{\n    textures[textureID] = (TextureInfo){\n        .width = width,\n        .height = height,\n        .buffer = buffer};\n}\n\nvoid invertFrame(uint32_t textureID)\n{\n    next_invert = true;\n}\n\nvoid blendFrames(uint32_t texture1ID, uint32_t texture2ID)\n{\n    next_invert = false;\n}\n\nvoid getCurrentResults(uint8_t *outputBuffer)\n{\n    auto texture1 = textures[0].buffer;\n    auto texture2 = textures[1].buffer;\n    auto blend_inverse = 1 - target_blend_ratio;\n    auto array_size = target_width * target_height * 3;\n    if (next_invert)\n    {\n        for (int i = 0; i < array_size; i = i + 3)\n        {\n            outputBuffer[i] = 255 - texture1[i];\n            outputBuffer[i + 1] = 255 - texture1[i + 1];\n            outputBuffer[i + 2] = 255 - texture1[i + 2];\n            //outputBuffer[i + 4] = texture1[i + 4];\n        }\n    }\n    else\n    {\n        for (int i = 0; i < array_size; i = i + 3)\n        {\n            int g = i + 1;\n            int b = i + 2;\n            outputBuffer[i] = (texture1[i] * blend_inverse) + (texture2[i] * target_blend_ratio);\n            outputBuffer[g] = (texture1[g] * blend_inverse) + (texture2[g] * target_blend_ratio);\n            outputBuffer[b] = (texture1[b] * blend_inverse) + (texture2[b] * target_blend_ratio);\n            //outputBuffer[i + 4] = texture1[i + 4];\n        }\n    }\n}\n\nvoid tearDownOpenGL()\n{\n}\n","#define FRONTEND 1\n\n#include <emscripten.h>\n#include <string>\nextern \"C\"\n{\n#include \"html5.h\"\n#include \"openGLShading.cpp\"\n}\n\nint main(int argc, char const *argv[])\n{\n    printf(\"[WASM] Loaded\\n\");\n\n    EM_ASM(\n        if (typeof window != \"undefined\") {\n            window.dispatchEvent(new CustomEvent(\"wasmLoaded\"))\n        } else {\n            global.onWASMLoaded && global.onWASMLoaded()});\n\n    return 0;\n}\n\nextern \"C\"\n{\n\n    EMSCRIPTEN_KEEPALIVE\n    void clearContexts(void)\n    {\n    }\n\n    EMSCRIPTEN_KEEPALIVE\n    void createContext(int width, int height, float blend_ratio, char *id)\n    {\n        printf(\"creating %s context\\n\", id);\n        setupOpenGL(width, height, blend_ratio, id);\n        free(id);\n    }\n\n    EMSCRIPTEN_KEEPALIVE\n    void invertFrameRun(uint8_t *buffer, uint8_t *result)\n    {\n        loadTexture(0, 0, 0, buffer);\n        invertFrame(0);\n        getCurrentResults(result);\n    }\n\n    EMSCRIPTEN_KEEPALIVE\n    void blendTexturesRun(uint8_t *buffer1, uint8_t *buffer2, uint8_t *result)\n    {\n        loadTexture(0, 0, 0, buffer1);\n        loadTexture(1, 0, 0, buffer2);\n        blendFrames(0, 1);\n        getCurrentResults(result);\n    }\n}\n"]}